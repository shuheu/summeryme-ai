// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./generated/prisma"
  binaryTargets = ["native", "linux-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  uid       String   @unique @db.VarChar(255)
  name      String   @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  savedArticles SavedArticle[]
  userDailySummaries UserDailySummary[]

  @@map("users")
}

model SavedArticle {
  id        Int      @id @default(autoincrement())
  userId    Int
  title     String   @db.VarChar(255)
  url       String   @db.VarChar(1024)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  savedArticleSummary SavedArticleSummary?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userDailySummarySavedArticles UserDailySummarySavedArticle[]

  @@index([userId])
  @@index([createdAt])
  @@map("saved_articles")
}

model SavedArticleSummary {
  id        Int      @id @default(autoincrement())
  savedArticleId Int @unique
  summary     String   @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  savedArticle SavedArticle @relation(fields: [savedArticleId], references: [id], onDelete: Cascade)

  @@map("saved_article_summaries")
}

model UserDailySummary {
  id        Int      @id @default(autoincrement())
  userId    Int
  summary   String   @db.Text
  audioUrl  String?  @db.VarChar(255)
  generatedDate DateTime @db.Date
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userDailySummarySavedArticles UserDailySummarySavedArticle[]

  @@index([userId])
  @@index([createdAt])
  @@unique([userId, generatedDate])
  @@map("user_daily_summaries")
}

model UserDailySummarySavedArticle {
  id        Int      @id @default(autoincrement())
  userDailySummaryId Int
  savedArticleId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userDailySummary UserDailySummary @relation(fields: [userDailySummaryId], references: [id], onDelete: Cascade)
  savedArticle SavedArticle @relation(fields: [savedArticleId], references: [id], onDelete: Cascade)

  @@index([userDailySummaryId])
  @@index([savedArticleId])
  @@unique([userDailySummaryId, savedArticleId])
  @@map("user_daily_summary_saved_articles")
}