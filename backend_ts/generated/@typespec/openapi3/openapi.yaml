openapi: 3.0.0
info:
  title: Summeryme AI API
  version: 0.0.0
tags: []
paths:
  /api/saved-articles:
    get:
      operationId: SavedArticles_list
      parameters:
        - $ref: '#/components/parameters/PaginationQuery.page'
        - $ref: '#/components/parameters/PaginationQuery.limit'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/SavedArticlesListResponse'
                  - $ref: '#/components/schemas/ErrorResponse'
    post:
      operationId: SavedArticles_create
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '201':
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavedArticleResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSavedArticleRequest'
  /api/saved-articles/{id}:
    get:
      operationId: SavedArticles_getById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavedArticleResponse'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: SavedArticles_deleteById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/user-daily-summaries:
    get:
      operationId: UserDailySummaries_list
      parameters:
        - $ref: '#/components/parameters/PaginationQuery.page'
        - $ref: '#/components/parameters/PaginationQuery.limit'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/UserDailySummariesListResponse'
                  - $ref: '#/components/schemas/ErrorResponse'
  /api/user-daily-summaries/{id}:
    get:
      operationId: UserDailySummaries_getById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDailySummaryResponse'
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /health:
    get:
      operationId: healthCheck
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
  /health/basic:
    get:
      operationId: basicHealthCheck
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
components:
  parameters:
    PaginationQuery.limit:
      name: limit
      in: query
      required: false
      schema:
        type: integer
        format: int32
        minimum: 1
        maximum: 100
        default: 10
      explode: false
    PaginationQuery.page:
      name: page
      in: query
      required: false
      schema:
        type: integer
        format: int32
        minimum: 1
        default: 1
      explode: false
  schemas:
    CreateSavedArticleRequest:
      type: object
      required:
        - title
        - url
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 255
        url:
          type: string
          maxLength: 1024
    ErrorResponse:
      type: object
      required:
        - error
      properties:
        error:
          type: string
        details:
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
    HealthCheckResponse:
      type: object
      required:
        - status
        - timestamp
      properties:
        status:
          type: string
          enum:
            - healthy
            - unhealthy
        timestamp:
          type: string
        database:
          type: object
          properties:
            status:
              type: string
              enum:
                - connected
                - disconnected
          required:
            - status
    PaginationResponse:
      type: object
      required:
        - currentPage
        - totalPages
        - totalCount
        - limit
        - hasNextPage
        - hasPreviousPage
      properties:
        currentPage:
          type: integer
          format: int32
        totalPages:
          type: integer
          format: int32
        totalCount:
          type: integer
          format: int32
        limit:
          type: integer
          format: int32
        hasNextPage:
          type: boolean
        hasPreviousPage:
          type: boolean
    SavedArticle:
      type: object
      required:
        - id
        - userId
        - title
        - url
        - createdAt
        - updatedAt
      properties:
        id:
          type: integer
          format: int32
        userId:
          type: integer
          format: int32
        title:
          type: string
        url:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    SavedArticleResponse:
      type: object
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/SavedArticle'
        message:
          type: string
    SavedArticlesListResponse:
      type: object
      required:
        - data
        - pagination
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/SavedArticle'
        pagination:
          $ref: '#/components/schemas/PaginationResponse'
    User:
      type: object
      required:
        - id
        - email
        - name
        - createdAt
        - updatedAt
      properties:
        id:
          type: integer
          format: int32
        email:
          type: string
        name:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    UserDailySummariesListResponse:
      type: object
      required:
        - data
        - pagination
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/UserDailySummary'
        pagination:
          $ref: '#/components/schemas/PaginationResponse'
    UserDailySummary:
      type: object
      required:
        - id
        - userId
        - audioFileUrl
        - summeryText
        - summeryDate
        - createdAt
        - updatedAt
      properties:
        id:
          type: integer
          format: int32
        userId:
          type: integer
          format: int32
        audioFileUrl:
          type: string
          nullable: true
        summeryText:
          type: string
        summeryDate:
          type: string
          format: date
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        user:
          $ref: '#/components/schemas/User'
    UserDailySummaryResponse:
      type: object
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/UserDailySummary'
    ValidationError:
      type: object
      required:
        - field
        - message
      properties:
        field:
          type: string
        message:
          type: string
servers:
  - url: http://localhost:3000
    description: Local development server
    variables: {}
