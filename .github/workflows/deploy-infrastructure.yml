name: 🚀 Deploy Infrastructure with Terraform

on:
  # TODO: test用
  # push:
  #   branches:
  #     - 'feat/**'
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform action to perform'
        required: true
        default: 'plan'
        type: choice
        options:
          - plan
          - apply
          - destroy
      target:
        description: 'Terraform target (optional)'
        required: false
        type: string

env:
  PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}
  REGION: ${{ vars.GCP_REGION || 'asia-northeast1' }}
  TERRAFORM_VERSION: 1.6.0

jobs:
  terraform:
    name: Terraform ${{ github.event.inputs.action }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Create terraform.tfvars
        run: |
          cat > terraform.tfvars << EOF
          project_id      = "${{ env.PROJECT_ID }}"
          region          = "${{ env.REGION }}"
          environment     = "production"
          container_image = "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/backend/backend-api:latest"
          EOF

      - name: Terraform Init
        run: terraform init

      - name: 🔍 Run Terraform Lint Checks
        run: |
          echo "🔍 Running comprehensive Terraform lint checks..."

          # TFLintのセットアップと実行
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
          tflint --init
          tflint --recursive

          # tfsecのセットアップと実行
          curl -s https://raw.githubusercontent.com/aquasecurity/tfsec/master/scripts/install_linux.sh | bash
          tfsec . --format=json --out=tfsec-results.json

          # Checkovのセットアップと実行
          pip install checkov
          checkov -d . --framework terraform --output json --output-file checkov-results.json

          echo "✅ All lint checks passed!"

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Format Check
        run: terraform fmt -check

      - name: Terraform Plan
        if: ${{ github.event.inputs.action == 'plan' }}
        run: |
          if [ -n "${{ github.event.inputs.target }}" ]; then
            terraform plan -target="${{ github.event.inputs.target }}"
          else
            terraform plan
          fi

      - name: Terraform Apply
        if: ${{ github.event.inputs.action == 'apply' }}
        run: |
          if [ -n "${{ github.event.inputs.target }}" ]; then
            terraform apply -auto-approve -target="${{ github.event.inputs.target }}"
          else
            terraform apply -auto-approve
          fi

      - name: Terraform Destroy
        if: ${{ github.event.inputs.action == 'destroy' }}
        run: |
          if [ -n "${{ github.event.inputs.target }}" ]; then
            terraform destroy -auto-approve -target="${{ github.event.inputs.target }}"
          else
            terraform destroy -auto-approve
          fi

      - name: Terraform Output
        if: ${{ github.event.inputs.action == 'apply' }}
        run: terraform output
